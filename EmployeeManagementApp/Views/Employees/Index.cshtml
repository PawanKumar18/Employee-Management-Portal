@model IEnumerable<EmployeeManagementApp.Models.Employee>

@{
    ViewData["Title"] = "Employee List";
}

<h1>Employee List</h1>

<!-- Search Form -->
<form asp-action="Index" method="get" class="form-inline mb-3">
    <div class="form-group mr-2">
        <label for="searchEmployeeID" class="sr-only">Employee ID</label>
        <input type="text" name="searchEmployeeID" id="searchEmployeeID" class="form-control" placeholder="Enter Employee ID" value="@Context.Request.Query["searchEmployeeID"]" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
    @if (!string.IsNullOrEmpty(Context.Request.Query["searchEmployeeID"]))
    {
        <a asp-action="Index" class="btn btn-secondary ml-2">Reset</a>
    }
</form>

<!-- Display Validation Errors -->
@if (!ViewData.ModelState.IsValid && ViewData.ModelState.ErrorCount > 0)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

@if (Model != null && Model.Any())
{
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().EmployeeID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Department.DepartmentName)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Department.DepartmentName)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.EmployeeID" class="btn btn-sm btn-warning">
                            <i class="fas fa-edit mr-1"></i> Edit
                        </a>
                        <a asp-action="Details" asp-route-id="@item.EmployeeID" class="btn btn-sm btn-info">
                            <i class="fas fa-info-circle mr-1"></i> Details
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.EmployeeID" class="btn btn-sm btn-danger">
                            <i class="fas fa-trash-alt mr-1"></i> Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    @if (string.IsNullOrEmpty(Context.Request.Query["searchEmployeeID"]))
    {
        <div class="alert alert-info">
            No employees found.
        </div>
    }
    else
    {
        <div class="alert alert-warning">
            No employee found with the specified Employee ID.
        </div>
    }
}
